<!DOCTYPE HTML>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Sales Report</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="shortcut icon" type="image/x-icon" href="assets/imgs/theme/favicon.svg">
    <link href="/admin-assets/css/main.css" rel="stylesheet" type="text/css" />
    
   

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.min.js"></script>

    <style>
    .table {
            width: 100%;
            margin-bottom: 1rem;
            color: #212529;
        }

        .table th,
        .table td {
            vertical-align: middle;
            text-align: center; /* Center text within table cells */
        }

        .table .form-check {
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .table .btn-xs {
            padding: 0.25rem 0.5rem;
            font-size: 0.875rem;
            line-height: 1.5;
            border-radius: 0.2rem;
        }

        .table-light {
            background-color: #f8f9fa;
        }

        .text-center {
            text-align: center;
        }

        #customDateRange {
            display: flex; /* Flex container */
            justify-content: space-between;
            align-items: center;
            gap: 10px;
            margin-top: 10px; /* Add margin to push it down */
        }

        #customDateRange .col-auto {
            flex: 1;
        }

        .custom-date-form .col-auto {
            margin-bottom: 105px; /* Margin between elements */
        }
        .custom-btn {
        font-size: 0.8rem; /* Adjust the font size */
        padding: 0.25rem 0.5rem; /* Adjust padding */
    }
    </style>
      <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
      <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
    <div class="screen-overlay"></div>
    <aside class="navbar-aside" id="offcanvas_aside">
        <div class="aside-top">
            
            <div class="logout-button">
                <a href="/admin/logout">Logout</a>
            </div>
            <div>
                <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i> </button>
            </div>
        </div>
        <nav>
            <ul class="menu-aside">
                <li class="menu-item active">
                    <a class="menu-link" href="adminhome"> <i class="icon material-icons md-home"></i>
                        <span class="text">Dashboard</span>
                    </a>
                </li>
                <li class="menu-item has-submenu">
                    <a class="menu-link" href="admin-category"> <i class="icon material-icons md-shopping_bag"></i>
                        <span class="text">Products</span>
                    </a>
                    <div class="submenu">
                        <a href="productlist">Product List</a>
                       
                       
                        <a href="admin-category">Categories</a>
                    </div>
                </li>
                <li class="menu-item has-submenu">
                    <a class="menu-link" href="order"> <i class="icon material-icons md-shopping_cart"></i>
                        <span class="text">Orders</span>
                    </a>
                    <div class="submenu">
                        <a href="order">Order</a>
                        
                    </div>

                    <li class="menu-item has-submenu">
                        <a class="menu-link" href="/admin/return-product"> <i class="icon material-icons md-shopping_cart"></i>
                            <span class="text">product return request</span>
                        </a>
                     <div class="submenu">
                        <a href="/admin/return-product">Order return</a>
                        
                    </div>
                </li> 
                <li class="menu-item has-submenu">
                    <a class="menu-link" href="coupon"> <i class="icon material-icons md-store"></i>
                        <span class="text">coupon</span>
                    </a>
                    <div class="submenu">
                        <a href="coupon">Add coupon</a>
                       
                    </div>
                </li>
                <li class="menu-item has-submenu">
                    <a class="menu-link" href="products"> <i class="icon material-icons md-add_box"></i>
                        <span class="text">Add product</span>
                    </a>
                    <div class="submenu">
                        <a href="products">Add product 1</a>
                        
                    </div>
                </li>
                
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="user-details"> <i class="icon material-icons md-account_circle"></i>
                        <span class="text">user</span>
                    </a>
                </li>
                
            <hr>
            
                </li>
            </ul>
            <hr>
        </nav>
    </aside>
    <main class="main-wrap">
        <header class="main-header navbar">
           
        </header>
        <div class="container">
            <div class="row align-items-center mb-4">
                <div class="col-md-2 col-6">
                    <div class="custom_select">
                        <select id="timeRangeFilter" class="form-select select-nice">
                            <option value="" disabled selected hidden>Select Time Range</option>
                            <!-- <option value="all" >All</option> -->
                            <option value="daily">Daily</option>
                            <option value="weekly">Weekly</option>
                            <option value="monthly">Monthly</option>
                            <option value="yearly">Yearly</option>
                           
                        </select>
                    </div>
                    <div class="custom_select">
                        <select id="categoryFilter" class="form-select select-nice">
                            <option value="" disabled selected hidden>Select Category</option>
                           
                            <% categories.forEach((category) => { %>
                                <option value="<%= category._id %>"><%= category.category %></option>
                            <% }); %>
                        </select>
                    </div>
                    
                    
                    
                    <br>
                    <div class="col-md-2 col-3">
                        <button id="customDateRangeButton" class="btn btn-primary" style="font-size: 12px; padding: 4px 8px;">Custom Date</button>
                    </div>
                    
                </div>
                <div class="modal fade" id="dateRangeModal" tabindex="-1" aria-labelledby="dateRangeModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="dateRangeModalLabel">Select Date Range</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <form id="customDateForm">
                                    <div class="mb-3">
                                        <label for="startDate" class="form-label">Starting:</label>
                                        <input type="date" class="form-control" id="startDate" name="start" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="endDate" class="form-label">Ending:</label>
                                        <input type="date" class="form-control" id="endDate" name="end" required>
                                    </div>
                                    <button type="submit" class="btn btn-primary">Submit</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
                
                
                <div class="col-md-2 col-6">
                    <button id="fetchDataButton" class="btn btn-primary">Fetch Data</button>
                </div>
                    <div class="col-md-2 col-6">
                        <button class="btn btn-success" onclick="downloadPDF()">Download PDF</button>
                        <br><br>
                        <button class="btn btn-info" onclick="downloadExcel()">Download Excel</button>
                    </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table align-middle table-nowrap mb-0">
                        <thead class="table-light text-center">
                            <tr>
                                <th scope="col">
                                    <div class="form-check align-middle">
                                        <!-- <input class="form-check-input" type="checkbox" id="transactionCheck01"> -->
                                        <label class="form-check-label" for="transactionCheck01"></label>
                                    </div>
                                </th>
                                <th scope="col">Order ID</th>
                                <th scope="col">Billing Name</th>
                                <th scope="col">Date</th>
                                <th scope="col">Total</th>
                                <th scope="col">Payment Status</th>
                                <th scope="col">Payment Method</th>
                                <th scope="col">Order Status</th>
                                <th scope="col">View Details</th>
                            </tr>
                        </thead>
                        <tbody id="orderTableBody">
                            <!-- Order rows will be dynamically inserted here -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

       
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                <li class="page-item" id="prevPage">
                    <a class="page-link" href="#" aria-label="Previous">
                        <span aria-hidden="true">&laquo; Previous</span>
                    </a>
                </li>
                <li class="page-item active">
                    <span class="page-link" id="currentPage">
                        Page <span id="pageNumber">1</span> of <span id="totalPages">1</span>
                    </span>
                </li>
                <li class="page-item" id="nextPage">
                    <a class="page-link" href="#" aria-label="Next">
                        <span aria-hidden="true">Next &raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
          
          
        
          
          
          
          
          
          
          

        <!-- <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script> -->
    
        <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
              
        <script>
    
    function updatePagination(currentPage, totalPages, timeRange, category, useCustomDate = false, start = '', end = '') {
    document.getElementById('pageNumber').textContent = currentPage;
    document.getElementById('totalPages').textContent = totalPages;

    const prevPage = document.getElementById('prevPage');
    const nextPage = document.getElementById('nextPage');

    // Disable/Enable Previous Page
    if (currentPage === 1) {
        prevPage.classList.add('disabled');
    } else {
        prevPage.classList.remove('disabled');
        
        // Construct previous page URL
        const prevUrl = useCustomDate 
            ? `/admin/salesreportsearch?page=${currentPage - 1}&start=${encodeURIComponent(start)}&end=${encodeURIComponent(end)}`
            : `/admin/sales-${timeRange}?page=${currentPage - 1}&category=${encodeURIComponent(category)}`;
        prevPage.querySelector('a').setAttribute('href', prevUrl);
    }

    // Disable/Enable Next Page
    if (currentPage === totalPages) {
        nextPage.classList.add('disabled');
    } else {
        nextPage.classList.remove('disabled');
        
        // Construct next page URL
        const nextUrl = useCustomDate 
            ? `/admin/salesreportsearch?page=${currentPage + 1}&start=${encodeURIComponent(start)}&end=${encodeURIComponent(end)}`
            : `/admin/sales-${timeRange}?page=${currentPage + 1}&category=${encodeURIComponent(category)}`;
        nextPage.querySelector('a').setAttribute('href', nextUrl);
    }
}


document.getElementById('nextPage').addEventListener('click', (event) => {
    event.preventDefault();
    const currentPage = parseInt(document.getElementById('pageNumber').textContent);
    const nextPage = currentPage + 1;
    const totalPages = parseInt(document.getElementById('totalPages').textContent);
    const timeRange = document.getElementById('timeRangeFilter').value;
    const category = document.getElementById('categoryFilter').value || 'all';

    if (nextPage <= totalPages) {
        if (selectedStartDate && selectedEndDate) {
            const url = `/admin/salesreportsearch?page=${nextPage}&start=${encodeURIComponent(selectedStartDate)}&end=${encodeURIComponent(selectedEndDate)}`;
            fetchOrders(url, true);
        } else {
            const url = `/admin/sales-${timeRange}?page=${nextPage}&category=${encodeURIComponent(category)}`;
            fetchOrders(url);
        }
    }
});


document.getElementById('prevPage').addEventListener('click', (event) => {
    event.preventDefault();
    const currentPage = parseInt(document.getElementById('pageNumber').textContent);
    const prevPage = currentPage - 1;
    const timeRange = document.getElementById('timeRangeFilter').value;
    const category = document.getElementById('categoryFilter').value || 'all';

    if (prevPage > 0) {
        if (selectedStartDate && selectedEndDate) {
            const url = `/admin/salesreportsearch?page=${prevPage}&start=${encodeURIComponent(selectedStartDate)}&end=${encodeURIComponent(selectedEndDate)}`;
            fetchOrders(url, true);
        } else {
            const url = `/admin/sales-${timeRange}?page=${prevPage}&category=${encodeURIComponent(category)}`;
            fetchOrders(url);
        }
    }
});
// });





function getCustomDateRangeUrl(baseUrl) {
    const startDate = document.getElementById('startDate').value;
    const endDate = document.getElementById('endDate').value;

    if (!startDate || !endDate) {
        alert('Please select a custom date range first.');
        return null;
    }

    const url = `${baseUrl}&timeRange=custom&startDate=${encodeURIComponent(startDate)}&endDate=${encodeURIComponent(endDate)}`;
    console.log('Custom date range URL:', url);
    return url;
}

function downloadPDF() {
    const timeRange = document.getElementById('timeRangeFilter').value;
    const category = document.getElementById('categoryFilter').value || 'all';
    let url = `/admin/download-pdf?timeRange=${encodeURIComponent(timeRange)}&category=${encodeURIComponent(category)}`;

    console.log('Initial URL:', url);
    console.log('Time Range:', timeRange);

    if (timeRange === 'custom') {
        const customUrl = getCustomDateRangeUrl(url);
        if (customUrl) {
            url = customUrl;
        } else {
            return; 
        }
    }

    console.log('Final URL for PDF download:', url);
    window.location.href = url;
}

function downloadExcel() {
    const timeRange = document.getElementById('timeRangeFilter').value;
    const category = document.getElementById('categoryFilter').value || 'all';
    let url = `/admin/download-excel?timeRange=${encodeURIComponent(timeRange)}&category=${encodeURIComponent(category)}`;

    console.log('Initial URL:', url);
    console.log('Time Range:', timeRange);

    if (timeRange === 'custom') {
        const customUrl = getCustomDateRangeUrl(url);
        if (customUrl) {
            url = customUrl;
        } else {
            return;
        }
    }

    console.log('Final URL for Excel download:', url);
    window.location.href = url;
}
    
    function getCustomDateRangeUrl(baseUrl) {
        const startDate = document.getElementById('startDate').value;
        const endDate = document.getElementById('endDate').value;
    
        if (startDate && endDate) {
            return `${baseUrl}&startDate=${encodeURIComponent(startDate)}&endDate=${encodeURIComponent(endDate)}`;
        } else {
            alert('Please select both start and end dates.');
            return null;
        }
    }
    
                    document.getElementById('fetchDataButton').addEventListener('click', function(event) {
                    event.preventDefault();
                    fetchFilteredOrders();
                });
        
                function fetchFilteredOrders() {
                    const timeRange = document.getElementById('timeRangeFilter').value;
                    console.log("Time range selected:", timeRange);
        
                    fetch(`/admin/salesreportsearch/${timeRange}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Network response was not ok');
                            }
                            return response.json();
                        })
                        .then(orders => {
                            renderOrders(orders);
                            console.log("order", orders);
                        })
                        .catch(error => {
                            // console.error('Error fetching filtered orders:', error);
                            // alert('Error fetching filtered orders. Please try again later.');
                        });
                }
                
    
    
    
    
                let selectedStartDate = '';
let selectedEndDate = '';

document.addEventListener('DOMContentLoaded', function () {
    flatpickr("#startDate", { dateFormat: "Y-m-d" });
    flatpickr("#endDate", { dateFormat: "Y-m-d" });

    document.getElementById('customDateRangeButton').addEventListener('click', function() {
        const modal = new bootstrap.Modal(document.getElementById('dateRangeModal'));
        modal.show();
    });

    document.getElementById('customDateForm').addEventListener('submit', function(event) {
        event.preventDefault();

        selectedStartDate = document.getElementById('startDate').value;
        selectedEndDate = document.getElementById('endDate').value;

        if (!selectedStartDate || !selectedEndDate) {
            alert('Please select both start and end dates.');
            return;
        }

        fetchOrders('/admin/salesreportsearch', true); // Call with custom date range
        const modal = bootstrap.Modal.getInstance(document.getElementById('dateRangeModal'));
        modal.hide();
    });

    document.getElementById('fetchDataButton').addEventListener('click', (event) => {
        event.preventDefault();
        const timeRange = document.getElementById('timeRangeFilter').value;
        const category = document.getElementById('categoryFilter').value || 'all';
        let url;

        switch (timeRange) {
            case 'daily':
                url = `/admin/sales-daily?category=${encodeURIComponent(category)}`;
                break;
            case 'weekly':
                url = `/admin/sales-weekly?category=${encodeURIComponent(category)}`;
                break;
            case 'monthly':
                url = `/admin/sales-monthly?category=${encodeURIComponent(category)}`;
                break;
            case 'yearly':
                url = `/admin/sales-yearly?category=${encodeURIComponent(category)}`;
                break;
            default:
                url = `/admin/sales-all?category=${encodeURIComponent(category)}`;
                break;
        }

        fetchOrders(url);
    });
});

document.getElementById('customDateForm').addEventListener('submit', function (event) {
    event.preventDefault(); // Prevent default form submission behavior

    // Get the selected start and end dates
    const selectedStartDate = document.getElementById('startDate').value;
    const selectedEndDate = document.getElementById('endDate').value;

    // Validate dates before calling fetchOrders
    if (new Date(selectedStartDate) > new Date(selectedEndDate)) {
        const errorDiv = document.getElementById("dateError");
        errorDiv.textContent = 'End date must be greater than start date.';
        errorDiv.style.display = "block";
        return;
    }

    // Clear any previous errors
    document.getElementById("dateError").style.display = "none";

    // Call the fetchOrders function to get the orders
    fetchOrders(`/admin/salesreportsearch?start=${encodeURIComponent(selectedStartDate)}&end=${encodeURIComponent(selectedEndDate)}`, true);
});

async function fetchOrders(url, useCustomDate = false) {
    try {
        console.log(url, "Fetching from URL");

        let response;
        if (useCustomDate) {
            // Ensure the URL is correct for custom date range
            if (!url.includes('start=') || !url.includes('end=')) {
                url = `/admin/salesreportsearch?start=${encodeURIComponent(selectedStartDate)}&end=${encodeURIComponent(selectedEndDate)}`;
            }
        }

        response = await fetch(url);
        const data = await response.json();

        console.log(data, "after response in frontend log");

        if (!response.ok) {
            // If the backend returns an error, display it using SweetAlert
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: data.error || 'Failed to load orders.',
            });
            return; // Exit early if there's an error
        }

        if (Array.isArray(data.orders)) {
            renderOrders(data.orders);
            updatePagination(
                data.currentPage,
                data.totalPages,
                document.getElementById('timeRangeFilter').value,
                document.getElementById('categoryFilter').value || 'all',
                useCustomDate,
                selectedStartDate,
                selectedEndDate
            );
        } else {
            // In case there's no orders array or data is malformed
            console.error('Unexpected data format:', data);
            Swal.fire({
                icon: 'warning',
                title: 'Warning',
                text: 'No orders found for the selected date range.',
            });
        }
    } catch (error) {
        console.error('Error fetching orders:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An unexpected error occurred.',
        });
    }
}


// Pagination click handler
document.querySelector('.pagination-button').addEventListener('click', function (event) {
  const page = event.target.dataset.page; // Get page number from button
  const url = `/admin/salesreportsearch?page=${page}&category=all`; // Adjust the URL as needed
  fetchOrders(url);
});



function renderOrders(orders) {
    const orderTableBody = document.getElementById('orderTableBody');
    orderTableBody.innerHTML = '';

    orders.forEach(order => {
        const row = `
            <tr>
                <td><a href="#" class="fw-bold">${order.orderId || order._id}</a></td>
                <td>${order.Address[0].name}</td>
                <td>${new Date(order.placed).toLocaleDateString()}</td>
                <td>${order.totalprice}</td>
                <td><span class="badge badge-pill badge-soft-success">${order.paymentstatus}</span></td>
                <td><i class="material-icons md-payment font-xxl text-muted mr-5"></i>${order.payment}</td>
                <td>${order.status}</td>
                <td><a href="/admin/order-details?id=${order._id}" class="btn btn-xs btn-primary">View details</a></td>
            </tr>`;
        orderTableBody.insertAdjacentHTML('beforeend', row);
    });
}

function updateTable(orders) {
    console.log('Updating table with orders:', orders);
    const tableBody = document.getElementById('orderTableBody');
    tableBody.innerHTML = ''; // clear existing rows

    orders.forEach(order => {
        const row = `
            <tr class="text-center">
                <td class="text-center">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="transactionCheck02">
                        <label class="form-check-label" for="transactionCheck02"></label>
                    </div>
                </td>
                <td><a href="#" class="fw-bold">${order.orderId || order._id}</a></td>
                <td>${order.Address[0].name}</td>
                <td>${new Date(order.placed).toLocaleDateString()}</td>
                <td>${order.totalprice}</td>
                <td><span class="badge badge-pill badge-soft-success">${order.paymentstatus}</span></td>
                <td><i class="material-icons md-payment font-xxl text-muted mr-5"></i>${order.payment}</td>
                <td>${order.status}</td>
                <td><a href="/admin/order-details?id=${order._id}" class="btn btn-xs btn-primary">View details</a></td>
            </tr>`;
        tableBody.insertAdjacentHTML('beforeend', row);
    });
}

// document.getElementById("customDateForm").addEventListener("submit", function(e) {
//     e.preventDefault();
    
//     const startDate = new Date(document.getElementById("startDate").value);
//     const endDate = new Date(document.getElementById("endDate").value);
    
//     if (startDate > endDate) {
//         document.getElementById("dateError").style.display = "block";
//     } else {
//         document.getElementById("dateError").style.display = "none";
//         this.submit();
//     }
// })
     
   

        
    // document.getElementById('fetchDataButton').addEventListener('click', (event) => {
    // event.preventDefault();
    // const timeRange = document.getElementById('timeRangeFilter').value;
    // const category = document.getElementById('categoryFilter').value || 'all';
    // let url = `/admin/salesreportsearch/${timeRange}?category=${encodeURIComponent(category)}&page=1`;
//   fetchOrders(url);
// });

    
    //     switch (timeRange) {
    //         case 'daily':
    //             url = `/admin/sales-daily?category=${encodeURIComponent(category)}`;
    //             break;
    //         case 'weekly':
    //             url = `/admin/sales-weekly?category=${encodeURIComponent(category)}`;
    //             break;
    //         case 'monthly':
    //             url = `/admin/sales-monthly?category=${encodeURIComponent(category)}`;
    //             break;
    //         case 'yearly':
    //             url = `/admin/sales-yearly?category=${encodeURIComponent(category)}`;
    //             break;
    //         default:
    //             url = `/admin/sales-all?category=${encodeURIComponent(category)}`;
    //             break;
    //     }   
    //     fetchOrders(url);
    // });
    
    
        
        // window.onload = () => {
        //     fetchOrders('/admin/sales-all');
        // };
        // document.addEventListener('DOMContentLoaded', function () {
        //         flatpickr("#startDate", { dateFormat: "Y-m-d" });
        //         flatpickr("#endDate", { dateFormat: "Y-m-d" });
    
        //         document.getElementById('customDateRangeButton').addEventListener('click', function() {
        //             const modal = new bootstrap.Modal(document.getElementById('dateRangeModal'));
        //             modal.show();
        //         });
    
        //         document.getElementById('customDateForm').addEventListener('submit', function(event) {
        //             event.preventDefault();
    
        //             const startDate = document.getElementById('startDate').value;
        //             const endDate = document.getElementById('endDate').value;
    
        //             if (!startDate || !endDate) {
        //                 alert('Please select both start and end dates.');
        //                 return;
        //             }
    
        //             sessionStorage.setItem('customStartDate', startDate);
        //             sessionStorage.setItem('customEndDate', endDate);
    
        //             fetchFilteredOrders();
    
        //             document.querySelector('#dateRangeModal').classList.remove('show');
        // document.querySelector('#dateRangeModal').style.display = 'none';
        // document.querySelector('.modal-backdrop').remove();
        //         });
        //     });
    
    
    //     document.getElementById('fetchDataButton').addEventListener('click', function(event) {
    //     event.preventDefault();
    //     applyFilters();
    // });
    
    // function applyFilters() {
    
    //     const timeRange = document.getElementById('timeRangeFilter').value;
    //     console.log(timeRange,"time in rsnge");
    //     const category = document.getElementById('categoryFilter').value || 'All';
    //     console.log(category,"hi hello");
       
        
    //     let url = `/admin/sales-report?page=1&category=${encodeURIComponent(category)}&timeRange=${encodeURIComponent(timeRange)}`;
    
    //     window.location.href = url;
    // }
    
    
    // function setInitialFilterValues() {
    //     const urlParams = new URLSearchParams(window.location.search);
       
    //     document.getElementById('categoryFilter').value = urlParams.get('category') || 'All';
    //     document.getElementById('timeRangeFilter').value = urlParams.get('timeRange') || 'Monthly';
    // }
    
    
    // window.onload = setInitialFilterValues;
      
</script>
    </main>
    <script src="/admin-assets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="/admin-assets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="/admin-assets/js/vendors/select2.min.js"></script>
    <script src="/admin-assets/js/vendors/perfect-scrollbar.js"></script>
    <script src="/admin-assets/js/vendors/jquery.fullscreen.min.js"></script>
    <script src="/admin-assets/js/vendors/chart.js"></script>
    <script src="/admin-assets/js/main.js" type="text/javascript"></script>
    <script src="/admin-assets/js/custom-chart.js" type="text/javascript"></script>
 
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>



   
    <script type="text/javascript" src="https://cdn.jsdelivr.net/jquery/latest/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
</body>
</html>



 <!-- <script>

let currentPage = 1; 
        const ordersPerPage = 6; 
        let totalOrders = 0;
        let totalPages = 1;

        function updateTable(orders) {
            const tableBody = document.getElementById('orderTableBody');
            tableBody.innerHTML = ''; 

            orders.forEach(order => {
                const row = `
                    <tr class="text-center">
                        <td><a href="#" class="fw-bold">${order.orderId || order._id}</a></td>
                        <td>${order.Address[0].name}</td>
                        <td>${new Date(order.placed).toLocaleDateString()}</td>
                        <td>${order.totalprice}</td>
                        <td><span class="badge badge-pill badge-soft-success">${order.paymentstatus}</span></td>
                        <td><i class="material-icons md-payment font-xxl text-muted mr-5"></i>${order.payment}</td>
                        <td>${order.status}</td>
                        <td><a href="/admin/order-details?id=${order._id}" class="btn btn-xs btn-primary">View details</a></td>
                    </tr>
                `;
                tableBody.insertAdjacentHTML('beforeend', row);
            });
        }

        function updatePagination() {
            const pagination = document.getElementById('pagination');
            pagination.innerHTML = ''; 

            for (let i = 1; i <= totalPages; i++) {
                const pageItem = `<li class="page-item ${i === currentPage ? 'active' : ''}">
                    <a class="page-link" href="#">${i}</a></li>`;
                pagination.insertAdjacentHTML('beforeend', pageItem);
            }

            document.querySelectorAll('.page-item').forEach(item => {
                item.addEventListener('click', function (e) {
                    e.preventDefault();
                    currentPage = parseInt(this.textContent);
                    fetchOrders(getCurrentUrl());
                });
            });
        }

        async function fetchOrders(url) {
            try {
                console.log("Fetching data from:", url); 
                const response = await fetch(`${url}&page=${currentPage}`);
                const data = await response.json();

                totalOrders = data.totalOrders;
                totalPages = Math.ceil(totalOrders / ordersPerPage);

                console.log('Fetched Data:', data.orders); 
                updateTable(data.orders);
                updatePagination();
            } catch (error) {
                console.error('Error fetching orders:', error);
            }
        }

        function getCurrentUrl() {
            const timeRange = document.getElementById('timeRangeFilter').value;
            const category = document.getElementById('categoryFilter').value;
            let url;

            switch (timeRange) {
                case 'daily':
                    url = `/admin/sales-daily?category=${encodeURIComponent(category)}`;
                    break;
                case 'weekly':
                    url = `/admin/sales-weekly?category=${encodeURIComponent(category)}`;
                    break;
                case 'monthly':
                    url = `/admin/sales-monthly?category=${encodeURIComponent(category)}`;
                    break;
                case 'yearly':
                    url = `/admin/sales-yearly?category=${encodeURIComponent(category)}`;
                    break;
                default:
                    url = `/admin/sales-all?category=${encodeURIComponent(category)}`;
                    break;
            }

            return url;
        }

        document.getElementById('fetchDataButton').addEventListener('click', (event) => {
            event.preventDefault();
            currentPage = 1;
            fetchOrders(getCurrentUrl());
        });

        document.addEventListener('DOMContentLoaded', () => {
            flatpickr("#startDate", { dateFormat: "Y-m-d" });
            flatpickr("#endDate", { dateFormat: "Y-m-d" });

            fetchOrders(getCurrentUrl()); // Fetch orders when the page loads
        });
        
        </script> -->
        
       
           
    
